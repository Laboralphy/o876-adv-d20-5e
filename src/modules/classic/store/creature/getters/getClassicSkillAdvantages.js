const CONSTS = require("../../../../../consts");
const { computeRuleValue } = require('../../../../../store/creature/common/compute-rule-value')
const {getDisAndAdvEffectRegistry, getThoseProvidedByEffects} = require("../../../../../store/creature/common/get-disandadv-effect-registry");

/**
 * Etabli la liste des avantages de THIS par rapport à sa cible THIS.target
 * @param state
 * @param getters {D20CreatureStoreGetters}
 * @return {D20AdvantagesOrDisadvantages}
 */
module.exports = (state, getters) => {
    // const myConditions = getters.getConditions
    // const myConditionSources = getters.getConditionSources
    const targetConditions = getters.getTargetConditions
    const targetConditionSources = getters.getTargetConditionSources
    // const aggressorConditions = getters.getAggressorConditions
    // const aggressorConditionSources = getters.getAggressorConditionSources
    const myID = getters.getId
    const oRelevantEffects = getters
        .getEffects
        .filter(effect => effect.type === CONSTS.EFFECT_ADVANTAGE)
    const oRelevantProperties = getters
        .getEquipmentItemProperties
        .filter(prop => prop.property === CONSTS.ITEM_PROPERTY_ADVANTAGE)
    const oAdvantageEffectRegistry = getDisAndAdvEffectRegistry(oRelevantEffects, oRelevantProperties)

    /**
     * Returns true if the condition is generated by this
     * @param sCondition
     * @returns {*}
     */
    const targetAffectedByMe = sCondition => targetConditions.has(sCondition) &&
        targetConditionSources[sCondition].has(myID)

    /*
    Commencer par définir les règles.
    Ces règles permettront au système d'afficher pour quelles raisons on bénéficie ou pas d'un avantage
     */

    // TARGET_CHARMED : La cible est charmée par this
    const TARGET_CHARMED = targetAffectedByMe(CONSTS.CONDITION_CHARMED)

    /*
    Définir l'ossature D20AdvantagesOrDisadvantages
     */
    return {
    }
}
